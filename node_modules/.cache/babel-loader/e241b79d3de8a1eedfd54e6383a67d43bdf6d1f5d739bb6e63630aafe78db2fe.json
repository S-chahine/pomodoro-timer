{"ast":null,"code":"var _jsxFileName = \"/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/SessionTimer.js\",\n  _s = $RefreshSig$();\n// SessionTimer.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './SessionTimer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionTimer = ({\n  timeLeft,\n  totalTime,\n  isRunning,\n  isPaused\n}) => {\n  _s();\n  const radius = 70;\n  const circumference = 2 * Math.PI * radius;\n  const dashOffset = useRef(circumference);\n  const startTimeRef = useRef(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && !isPaused) {\n      if (!startTimeRef.current) {\n        startTimeRef.current = Date.now() - elapsedTime * 1000;\n      }\n      intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const elapsedSeconds = Math.floor((currentTime - startTimeRef.current) / 1000);\n        dashOffset.current = dashOffset.current - circumference / totalTime;\n        if (elapsedSeconds <= totalTime) {\n          setElapsedTime(elapsedSeconds);\n        }\n      }, 1000);\n    } else {\n      dashOffset.current = dashOffset.current; // Maintain the current dash offset when paused\n      startTimeRef.current = null;\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, isPaused, totalTime, circumference, elapsedTime]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"150\",\n    height: \"150\",\n    viewBox: \"0 0 150 150\",\n    className: \"session-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"75\",\n      cy: \"75\",\n      r: radius,\n      fill: \"transparent\",\n      stroke: \"#007bff\",\n      strokeWidth: \"15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"75\",\n      cy: \"75\",\n      r: radius,\n      fill: \"transparent\",\n      stroke: \"#28a745\",\n      strokeWidth: \"15\",\n      strokeDasharray: circumference,\n      strokeDashoffset: dashOffset.current,\n      className: \"session-timer-progress\",\n      style: {\n        animationPlayState: isRunning && !isPaused ? 'running' : 'paused',\n        animationDuration: `${totalTime - elapsedTime}s`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"75\",\n      y: \"85\",\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      fontSize: \"25\",\n      fill: \"#333\",\n      children: [Math.floor(timeLeft / 60).toString().padStart(2, '0'), \":\", (timeLeft % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(SessionTimer, \"Dbki/ItKqsAyL7HD/pbLJBIEL8I=\");\n_c = SessionTimer;\nexport default SessionTimer;\nvar _c;\n$RefreshReg$(_c, \"SessionTimer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SessionTimer","timeLeft","totalTime","isRunning","isPaused","_s","radius","circumference","Math","PI","dashOffset","startTimeRef","elapsedTime","setElapsedTime","intervalId","current","Date","now","setInterval","currentTime","elapsedSeconds","floor","clearInterval","width","height","viewBox","className","children","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","style","animationPlayState","animationDuration","x","y","dominantBaseline","textAnchor","fontSize","toString","padStart","_c","$RefreshReg$"],"sources":["/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/SessionTimer.js"],"sourcesContent":["// SessionTimer.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './SessionTimer.css';\n\nconst SessionTimer = ({ timeLeft, totalTime, isRunning, isPaused }) => {\n    const radius = 70;\n    const circumference = 2 * Math.PI * radius;\n    const dashOffset = useRef(circumference);\n    const startTimeRef = useRef(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning && !isPaused) {\n            if (!startTimeRef.current) {\n                startTimeRef.current = Date.now() - elapsedTime * 1000;\n            }\n\n            intervalId = setInterval(() => {\n                const currentTime = Date.now();\n                const elapsedSeconds = Math.floor((currentTime - startTimeRef.current) / 1000);\n                dashOffset.current = dashOffset.current - (circumference / totalTime);\n\n                if (elapsedSeconds <= totalTime) {\n                    setElapsedTime(elapsedSeconds);\n                }\n            }, 1000);\n        } else {\n            dashOffset.current = dashOffset.current; // Maintain the current dash offset when paused\n            startTimeRef.current = null;\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isRunning, isPaused, totalTime, circumference, elapsedTime]);\n\n    return (\n        <svg width=\"150\" height=\"150\" viewBox=\"0 0 150 150\" className=\"session-timer\">\n            <circle cx=\"75\" cy=\"75\" r={radius} fill=\"transparent\" stroke=\"#007bff\" strokeWidth=\"15\" />\n            <circle\n                cx=\"75\"\n                cy=\"75\"\n                r={radius}\n                fill=\"transparent\"\n                stroke=\"#28a745\"\n                strokeWidth=\"15\"\n                strokeDasharray={circumference}\n                strokeDashoffset={dashOffset.current}\n                className=\"session-timer-progress\"\n                style={{ animationPlayState: isRunning && !isPaused ? 'running' : 'paused', animationDuration: `${totalTime - elapsedTime}s` }}\n            />\n            <text x=\"75\" y=\"85\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"25\" fill=\"#333\">\n                {Math.floor(timeLeft / 60).toString().padStart(2, '0')}:{(timeLeft % 60).toString().padStart(2, '0')}\n            </text>\n        </svg>\n    );\n};\n\nexport default SessionTimer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}