{"ast":null,"code":"var _jsxFileName = \"/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Controls from './Controls';\nimport SessionLength from './SessionLength';\nimport BreakLength from './BreakLength';\nimport SessionTimer from './SessionTimer';\nimport './Timer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const [isRunning, setIsRunning] = useState(false);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [breakLength, setBreakLength] = useState(5);\n  const [isPaused, setIsPaused] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(sessionLength * 60);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning && !isPaused) {\n      intervalId = setInterval(() => {\n        setTimeLeft(prevTime => prevTime === 0 ? breakLength * 60 : prevTime - 1);\n      }, 1000);\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, isPaused, timeLeft, breakLength]);\n  const toggleTimer = () => {\n    setIsRunning(prevIsRunning => {\n      const newIsRunning = !prevIsRunning;\n      setIsPaused(!newIsRunning); // Pause if starting, resume if pausing\n      return newIsRunning;\n    });\n  };\n  const resetTimer = () => {\n    setIsRunning(false);\n    setIsPaused(false); // Reset isPaused on timer reset\n    setTimeLeft(sessionLength * 60);\n  };\n  const incrementSession = () => {\n    setSessionLength(prevSessionLength => {\n      const newSessionLength = Math.min(prevSessionLength + 1, 60);\n      if (!isRunning && !isPaused) {\n        setTimeLeft(newSessionLength * 60);\n      }\n      return newSessionLength;\n    });\n  };\n  const decrementSession = () => {\n    setSessionLength(prevSessionLength => {\n      const newSessionLength = Math.max(prevSessionLength - 1, 1);\n      if (!isRunning && !isPaused) {\n        setTimeLeft(newSessionLength * 60);\n      }\n      return newSessionLength;\n    });\n  };\n  const incrementBreak = () => {\n    setBreakLength(prevBreakLength => Math.min(prevBreakLength + 1, 60));\n  };\n  const decrementBreak = () => {\n    setBreakLength(prevBreakLength => Math.max(prevBreakLength - 1, 1));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TimerLabel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Pomodoro Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SessionLength, {\n          sessionLength: sessionLength,\n          incrementSession: incrementSession,\n          decrementSession: decrementSession\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BreakLength, {\n          breakLength: breakLength,\n          incrementBreak: incrementBreak,\n          decrementBreak: decrementBreak\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(SessionTimer, {\n          timeLeft: timeLeft,\n          totalTime: sessionLength * 60,\n          isRunning: isRunning\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"timer-label\",\n            className: \"h4\",\n            children: \"Session\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            id: \"time-left\",\n            className: \"h1\",\n            children: `${Math.floor(timeLeft / 60).toString().padStart(2, '0')}:${(timeLeft % 60).toString().padStart(2, '0')}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Controls, {\n          toggleTimer: toggleTimer,\n          resetTimer: resetTimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(Timer, \"SwTd4LwHYGZflqg4gIgQHUslWFo=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","Controls","SessionLength","BreakLength","SessionTimer","jsxDEV","_jsxDEV","Timer","_s","isRunning","setIsRunning","sessionLength","setSessionLength","breakLength","setBreakLength","isPaused","setIsPaused","timeLeft","setTimeLeft","intervalId","setInterval","prevTime","clearInterval","toggleTimer","prevIsRunning","newIsRunning","resetTimer","incrementSession","prevSessionLength","newSessionLength","Math","min","decrementSession","max","incrementBreak","prevBreakLength","decrementBreak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalTime","id","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Controls from './Controls';\nimport SessionLength from './SessionLength';\nimport BreakLength from './BreakLength';\nimport SessionTimer from './SessionTimer';\nimport './Timer.css';\n\nfunction Timer() {\n    const [isRunning, setIsRunning] = useState(false);\n    const [sessionLength, setSessionLength] = useState(25);\n    const [breakLength, setBreakLength] = useState(5);\n    const [isPaused, setIsPaused] = useState(false);\n    const [timeLeft, setTimeLeft] = useState(sessionLength * 60);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning && !isPaused) {\n            intervalId = setInterval(() => {\n                setTimeLeft(prevTime => (prevTime === 0 ? breakLength * 60 : prevTime - 1));\n            }, 1000);\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isRunning, isPaused, timeLeft, breakLength]);\n\n    const toggleTimer = () => {\n        setIsRunning(prevIsRunning => {\n            const newIsRunning = !prevIsRunning;\n            setIsPaused(!newIsRunning); // Pause if starting, resume if pausing\n            return newIsRunning;\n        });\n    };\n\n\n    const resetTimer = () => {\n        setIsRunning(false);\n        setIsPaused(false); // Reset isPaused on timer reset\n        setTimeLeft(sessionLength * 60);\n    };\n\n    const incrementSession = () => {\n        setSessionLength(prevSessionLength => {\n            const newSessionLength = Math.min(prevSessionLength + 1, 60);\n            if (!isRunning && !isPaused) {\n                setTimeLeft(newSessionLength * 60);\n            }\n            return newSessionLength;\n        });\n    };\n\n    const decrementSession = () => {\n        setSessionLength(prevSessionLength => {\n            const newSessionLength = Math.max(prevSessionLength - 1, 1);\n            if (!isRunning && !isPaused) {\n                setTimeLeft(newSessionLength * 60);\n            }\n            return newSessionLength;\n        });\n    };\n\n    const incrementBreak = () => {\n        setBreakLength(prevBreakLength => Math.min(prevBreakLength + 1, 60));\n    };\n\n    const decrementBreak = () => {\n        setBreakLength(prevBreakLength => Math.max(prevBreakLength - 1, 1));\n    };\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"TimerLabel\">\n                <div className=\"col-md-6\">\n                    <p> Pomodoro Timer</p>\n                    <SessionLength\n                        sessionLength={sessionLength}\n                        incrementSession={incrementSession}\n                        decrementSession={decrementSession}\n                    />\n                    <BreakLength\n                        breakLength={breakLength}\n                        incrementBreak={incrementBreak}\n                        decrementBreak={decrementBreak}\n                    />\n                </div>\n                <div className=\"row justify-content-center\">\n                    <SessionTimer timeLeft={timeLeft} totalTime={sessionLength * 60} isRunning={isRunning} />\n\n                    <div className=\"text-center mt-4\">\n                        <p id=\"timer-label\" className=\"h4\">\n                            Session\n                        </p>\n                        <p id=\"time-left\" className=\"h1\">\n                            {`${Math.floor(timeLeft / 60).toString().padStart(2, '0')}:${(timeLeft % 60)\n                                .toString()\n                                .padStart(2, '0')}`}\n                        </p>\n                    </div>\n                    <Controls toggleTimer={toggleTimer} resetTimer={resetTimer} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Timer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}