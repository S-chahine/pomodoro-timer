{"ast":null,"code":"var _jsxFileName = \"/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/SessionTimer.js\",\n  _s = $RefreshSig$();\n// SessionTimer.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './SessionTimer.css'; // Import the CSS file for SessionTimer styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SessionTimer = ({\n  timeLeft,\n  totalTime,\n  isRunning\n}) => {\n  _s();\n  const radius = 70; // Increased radius for a larger circle\n  const circumference = 2 * Math.PI * radius;\n  const dashOffset = useRef(circumference);\n  const startTimeRef = useRef(null);\n  const elapsedTimeRef = useRef(0);\n  useEffect(() => {\n    let intervalId;\n    if (isRunning) {\n      if (!startTimeRef.current) {\n        startTimeRef.current = Date.now() - elapsedTimeRef.current * 1000;\n      }\n      intervalId = setInterval(() => {\n        const currentTime = Date.now();\n        const elapsedSeconds = Math.floor((currentTime - startTimeRef.current) / 1000);\n        dashOffset.current = dashOffset.current - circumference / totalTime;\n\n        // Update elapsed time when the animation is in progress\n        if (elapsedSeconds <= totalTime) {\n          elapsedTimeRef.current = elapsedSeconds;\n        }\n      }, 1000);\n    } else {\n      // Reset dashOffset when not running\n      dashOffset.current = circumference;\n    }\n    return () => clearInterval(intervalId);\n  }, [isRunning, totalTime, circumference]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"150\",\n    height: \"150\",\n    viewBox: \"0 0 150 150\",\n    className: \"session-timer\",\n    children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"75\",\n      cy: \"75\",\n      r: radius,\n      fill: \"transparent\",\n      stroke: \"#007bff\",\n      strokeWidth: \"15\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"75\",\n      cy: \"75\",\n      r: radius,\n      fill: \"transparent\",\n      stroke: \"#28a745\",\n      strokeWidth: \"15\",\n      strokeDasharray: circumference,\n      strokeDashoffset: dashOffset.current,\n      className: \"session-timer-progress\",\n      style: {\n        animationPlayState: isRunning ? 'running' : 'paused',\n        animationDuration: `${totalTime - elapsedTimeRef.current}s`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      x: \"75\",\n      y: \"85\",\n      dominantBaseline: \"middle\",\n      textAnchor: \"middle\",\n      fontSize: \"25\",\n      fill: \"#333\",\n      children: [Math.floor(timeLeft / 60).toString().padStart(2, '0'), \":\", (timeLeft % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(SessionTimer, \"nzkWqhA9XGEpPOhLHy+cywyImf0=\");\n_c = SessionTimer;\nexport default SessionTimer;\nvar _c;\n$RefreshReg$(_c, \"SessionTimer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","SessionTimer","timeLeft","totalTime","isRunning","_s","radius","circumference","Math","PI","dashOffset","startTimeRef","elapsedTimeRef","intervalId","current","Date","now","setInterval","currentTime","elapsedSeconds","floor","clearInterval","width","height","viewBox","className","children","cx","cy","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","strokeDasharray","strokeDashoffset","style","animationPlayState","animationDuration","x","y","dominantBaseline","textAnchor","fontSize","toString","padStart","_c","$RefreshReg$"],"sources":["/home/sc/pomodoro-clock/pomo-clock-frontend/pomodoro-clock-app/src/components/SessionTimer.js"],"sourcesContent":["// SessionTimer.js\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './SessionTimer.css'; // Import the CSS file for SessionTimer styles\n\nconst SessionTimer = ({ timeLeft, totalTime, isRunning }) => {\n    const radius = 70; // Increased radius for a larger circle\n    const circumference = 2 * Math.PI * radius;\n    const dashOffset = useRef(circumference);\n    const startTimeRef = useRef(null);\n    const elapsedTimeRef = useRef(0);\n\n    useEffect(() => {\n        let intervalId;\n\n        if (isRunning) {\n            if (!startTimeRef.current) {\n                startTimeRef.current = Date.now() - elapsedTimeRef.current * 1000;\n            }\n\n            intervalId = setInterval(() => {\n                const currentTime = Date.now();\n                const elapsedSeconds = Math.floor((currentTime - startTimeRef.current) / 1000);\n                dashOffset.current = dashOffset.current - (circumference / totalTime);\n\n                // Update elapsed time when the animation is in progress\n                if (elapsedSeconds <= totalTime) {\n                    elapsedTimeRef.current = elapsedSeconds;\n                }\n            }, 1000);\n        } else {\n            // Reset dashOffset when not running\n            dashOffset.current = circumference;\n        }\n\n        return () => clearInterval(intervalId);\n    }, [isRunning, totalTime, circumference]);\n\n    return (\n        <svg width=\"150\" height=\"150\" viewBox=\"0 0 150 150\" className=\"session-timer\">\n            <circle cx=\"75\" cy=\"75\" r={radius} fill=\"transparent\" stroke=\"#007bff\" strokeWidth=\"15\" />\n            <circle\n                cx=\"75\"\n                cy=\"75\"\n                r={radius}\n                fill=\"transparent\"\n                stroke=\"#28a745\"\n                strokeWidth=\"15\"\n                strokeDasharray={circumference}\n                strokeDashoffset={dashOffset.current}\n                className=\"session-timer-progress\"\n                style={{ animationPlayState: isRunning ? 'running' : 'paused', animationDuration: `${totalTime - elapsedTimeRef.current}s` }}\n            />\n            <text x=\"75\" y=\"85\" dominantBaseline=\"middle\" textAnchor=\"middle\" fontSize=\"25\" fill=\"#333\">\n                {Math.floor(timeLeft / 60).toString().padStart(2, '0')}:\n                {(timeLeft % 60).toString().padStart(2, '0')}\n            </text>\n        </svg>\n    );\n};\n\nexport default SessionTimer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}